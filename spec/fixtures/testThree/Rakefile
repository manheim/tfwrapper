# frozen_string_literal: true

require 'tfwrapper/raketasks'

# we want to get real streaming output
STDOUT.sync = true
STDERR.sync = true

TFWrapper::RakeTasks.install_tasks(
  'foo',
  backend_config: { 'path' => 'terraform/testThreeFoo' },
  tf_vars_from_env: { 'foo' => 'FOO' },
  tf_extra_vars: { 'bar' => 'barONEval' },
  before_proc: Proc.new do |taskname, tfdir|
    puts "Executing #{taskname} task with tfdir=#{tfdir}"
  end,
  after_proc: Proc.new do |taskname, tfdir|
    puts "Executed #{taskname} task with tfdir=#{tfdir}"
  end
)

TFWrapper::RakeTasks.install_tasks(
  'bar',
  namespace_prefix: 'bar',
  tf_vars_from_env: { 'foo' => 'FOO' },
  tf_extra_vars: { 'bar' => 'barTWOval' },
  before_proc: Proc.new do |taskname, tfdir|
    puts "Executing #{taskname} task with tfdir=#{tfdir}"
  end,
  after_proc: Proc.new do |taskname, tfdir|
    puts "Executed #{taskname} task with tfdir=#{tfdir}"
  end
)

TFWrapper::RakeTasks.install_tasks(
  'baz',
  namespace_prefix: 'baz',
  tf_vars_from_env: { 'foo' => 'FOO' },
  consul_url: 'http://127.0.0.1:8500',
  consul_env_vars_prefix: 'vars/testThreeBaz',
  before_proc: Proc.new do |taskname, tfdir|
    puts "Executing #{taskname} task with tfdir=#{tfdir}"
  end,
  after_proc: Proc.new do |taskname, tfdir|
    puts "Executed #{taskname} task with tfdir=#{tfdir}"
  end
)
